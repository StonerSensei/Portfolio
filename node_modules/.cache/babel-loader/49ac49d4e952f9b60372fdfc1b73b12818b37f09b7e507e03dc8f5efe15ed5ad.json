{"ast":null,"code":"var _jsxFileName = \"/home/parth/portfolio/src/SemiDonutChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './new.css'; // Ensure the correct path to your CSS file\nimport { useInView } from 'react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SemiDonutChart = ({\n  percentage,\n  fill,\n  txt\n}) => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const {\n    ref,\n    inView\n  } = useInView({\n    threshold: 0.5,\n    // When 50% of the component is in view\n    triggerOnce: true // Only trigger once when entering the viewport\n  });\n  useEffect(() => {\n    if (inView) {\n      setIsVisible(true);\n    }\n  }, [inView]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `semi-donut margin ${isVisible ? 'visible' : ''}`,\n    style: {\n      '--percentage': percentage,\n      '--fill': fill\n    },\n    children: txt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(SemiDonutChart, \"nC7TK91Jf0/Aac9H1KLK1MqclRU=\", false, function () {\n  return [useInView];\n});\n_c = SemiDonutChart;\nexport default SemiDonutChart;\nvar _c;\n$RefreshReg$(_c, \"SemiDonutChart\");","map":{"version":3,"names":["React","useState","useEffect","useInView","jsxDEV","_jsxDEV","SemiDonutChart","percentage","fill","txt","_s","isVisible","setIsVisible","ref","inView","threshold","triggerOnce","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/parth/portfolio/src/SemiDonutChart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './new.css'; // Ensure the correct path to your CSS file\nimport { useInView } from 'react-intersection-observer';\n\nconst SemiDonutChart = ({ percentage, fill, txt }) => {\n  const [isVisible, setIsVisible] = useState(false);\n  const { ref, inView } = useInView({\n    threshold: 0.5, // When 50% of the component is in view\n    triggerOnce: true // Only trigger once when entering the viewport\n  });\n\n  useEffect(() => {\n    if (inView) {\n      setIsVisible(true);\n    }\n  }, [inView]);\n\n  return (\n    <div\n      ref={ref}\n      className={`semi-donut margin ${isVisible ? 'visible' : ''}`}\n      style={{ '--percentage': percentage, '--fill': fill }}\n    >\n      {txt}\n    </div>\n  );\n}\n\nexport default SemiDonutChart;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW,CAAC,CAAC;AACpB,SAASC,SAAS,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,IAAI;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEY,GAAG;IAAEC;EAAO,CAAC,GAAGX,SAAS,CAAC;IAChCY,SAAS,EAAE,GAAG;IAAE;IAChBC,WAAW,EAAE,IAAI,CAAC;EACpB,CAAC,CAAC;EAEFd,SAAS,CAAC,MAAM;IACd,IAAIY,MAAM,EAAE;MACVF,YAAY,CAAC,IAAI,CAAC;IACpB;EACF,CAAC,EAAE,CAACE,MAAM,CAAC,CAAC;EAEZ,oBACET,OAAA;IACEQ,GAAG,EAAEA,GAAI;IACTI,SAAS,EAAE,qBAAqBN,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;IAC7DO,KAAK,EAAE;MAAE,cAAc,EAAEX,UAAU;MAAE,QAAQ,EAAEC;IAAK,CAAE;IAAAW,QAAA,EAErDV;EAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEV,CAAC;AAAAb,EAAA,CAtBKJ,cAAc;EAAA,QAEMH,SAAS;AAAA;AAAAqB,EAAA,GAF7BlB,cAAc;AAwBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}